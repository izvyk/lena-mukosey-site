@use 'variables' as var;

@use 'base';
@use 'header';
@use 'footer';

$workDescriptionTitleFontSize: 1.1rem;
$workDescriptionExtraFontSize: 0.9rem;

$workInfoWidth: 30ch;
$workInfoPadding: calc(var.$defaultGap / 4) calc(var.$defaultGap / 2) calc(var.$defaultGap / 2);

$imagesContainerHeightMobileVH: calc(100vh - header.$height - 2 * var.$defaultGap);
$imagesContainerHeightMobileSVH: calc(100svh - header.$height - 2 * var.$defaultGap);
$imagesContainerHeightDesktopVH: calc(100vh - 2 * var.$defaultGap);
$imagesContainerHeightDesktopSVH: calc(100svh - 2 * var.$defaultGap);

$worksGap: var.$defaultGap;

$imageCounterButtonBorderRadius: 3px;
$imageCounterButtonPadding: 3px;
$imageCounterArrowBorderSize: .55em;

main {
    margin-top: calc(-1 * var.$defaultGap);
    min-height: calc(100vh - header.$height - footer.$height);
    min-height: calc(100svh - header.$height - footer.$height);
}

.workInfo {
    display: block;
    height: fit-content;
    margin-top: calc(-1 * var.$defaultGap / 4);
    padding: calc(var.$defaultGap / 2);
    text-align: end;

    background-color: var.$defaultBackgroundColor;

    .title {
        .name {
            font-weight: 500;
        }
        font-size: $workDescriptionTitleFontSize;
    }

    .extra {
        font-size: $workDescriptionExtraFontSize;
    }
}

.workDescription {
    word-wrap: break-word;

    &.mobile {
        padding-inline: calc(var.$defaultGap / 2);
        padding-bottom: calc(var.$defaultGap / 2);
        margin-top: calc(-1 * var.$defaultGap / 3);
        text-align: end;
        position: relative;
        z-index: 1;

        &:empty {
            padding: 0;
        }
    }

    &.desktop {
        display: none;
    }
}

.imagesContainer {
    height: fit-content;
    max-height: $imagesContainerHeightMobileVH;
    max-height: $imagesContainerHeightMobileSVH;

    // Just a fallback: scrollbar width causes problems
    // max-width: 100%;
    // max-width: -webkit-fill-available;
    // max-width: -moz-available;

    overflow-y: hidden;
    overflow-x: auto;

    display: flex;
    gap: $worksGap;

    outline: none;

    scroll-behavior: smooth;

    //hiding scrollbar
    scrollbar-width: none;
    -ms-overflow-style: none;  /* IE and Edge */
    &::-webkit-scrollbar {
        -webkit-appearance: none;
        width: 0;
        height: 0;
    }

    .imageWrapper {
        max-height: inherit;
        max-width: 100%;
        height: fit-content;
        min-width: fit-content;

        position: relative;
        .trueImage {
            position: absolute;
            top: 0;
            left: 0;
            height: 100%;
            width: 100%;
            background-color: var.$defaultDarkerBackgroundColor;
        }

        .placeholder {
            z-index: 1;
            position: relative;
        }

        .imageCounter {
            position: absolute;
            bottom: 10px;
            right: 10px;
            font-size: 0.7em;
            font-weight: bold;
            background: #fff;
            z-index: 1;

            display: flex;
            align-items: center;
            gap: .5em;

            opacity: .7;
            transition: var.$defaultAnimationDuration opacity;

            &:hover {
                opacity: 1;
            }

            .annotation {
                pointer-events: none;
            }

            border-radius: $imageCounterButtonBorderRadius;

            .imageCounterButton {
                padding: $imageCounterButtonPadding;

                &:not(:has(.inactive)) {
                    pointer-events: all;
                    cursor: pointer;
                }

                &:has(.next) {
                    border-radius: 0 $imageCounterButtonBorderRadius $imageCounterButtonBorderRadius 0;
                }

                &:has(.prev) {
                    border-radius: $imageCounterButtonBorderRadius 0 0 $imageCounterButtonBorderRadius;
                }
            }

            .arrow {
                width: 0;
                height: 0;
                border-radius: 0;

                border-top: $imageCounterArrowBorderSize solid transparent;
                border-left: $imageCounterArrowBorderSize solid black;
                border-bottom: $imageCounterArrowBorderSize solid transparent;
                border-right: $imageCounterArrowBorderSize solid black;

                &.next {
                    border-right: none;

                    // &.inactive {
                    //     border-left: $imageCounterArrowBorderSize solid gray;
                    //     opacity: .5;
                    // }
                }

                &.prev {
                    border-left: none;

                    // &.inactive {
                    //     border-right: $imageCounterArrowBorderSize solid gray;
                    // }
                }

                &.inactive {
                    opacity: .25;
                }
            }
        }
    }

    img {
        max-width: inherit;
        max-height: inherit;
    }
}

.workContainer {
    padding-top: $worksGap;
    outline: none;

    &:focus-visible .workInfo .short {
        outline: var.$focusOutline;
        outline-offset: calc(var.$focusOffset / 3);
    }
}

@media (max-width: var.$desktopSingleWorkBreakpoint) {
    // Fixed header anchor problem workaround
    .workContainer {
        padding-top: calc(header.$height);
        margin-top: calc(-1 * header.$height);
    }
}

@media (min-width: var.$desktopSingleWorkBreakpoint) {
    header {
        background: linear-gradient(180deg, var.$defaultBackgroundColor 90%, rgba(0,0,0,0) 100%);
    }

    main {
        margin-top: calc(-1 * header.$height);
    }

    footer {
        #text {
            margin-inline: var.$defaultGap;
            text-align: start;
        }
    }

    .workContainer {
        display: grid;
        grid-template-columns: 0fr 1fr;

        &:focus-visible .workInfo .short {
            outline-offset: calc(var.$focusOffset - var.$focusOutlineWidth / 2);
        }

        padding-bottom: var.$defaultGap;
        margin-bottom: calc(-1 * var.$defaultGap);
    }

    .workDescription {
        &.mobile {
            display: none;
        }

        &.desktop {
            display: block;
            margin-bottom: var.$defaultGap;
        }
    }

    .workInfo {
        order: 1;
        width: $workInfoWidth;
        padding: 0 var.$defaultGap;
        margin-block: auto calc(-1 * var.$defaultGap);
        text-align: initial;
        padding-bottom: var.$defaultGap;
        
        position: sticky;
        bottom: 0;

        .short {
            display: flex;
            flex-direction: column-reverse;
            position: sticky;
            bottom: calc(var.$defaultGap);

            background-color: inherit;
        }

        .extra {
            background-color: inherit;
            background: linear-gradient(0deg, rgba(255,255,255,1) 90%, rgba(0,0,0,0) 100%);

            padding-top: calc(var.$defaultGap / 2);
            margin-top: calc(-1 * var.$defaultGap / 2);
        }

        .title {
            padding-bottom: var.$defaultGap;
            margin-bottom: calc(-1 * var.$defaultGap);
            background-color: inherit;
        }
    }

    .imagesContainer {
        order: 2;
        margin-right: var.$defaultGap;
        align-items: end;

        max-height: $imagesContainerHeightDesktopVH;
        max-height: $imagesContainerHeightDesktopSVH;
        
        // Just a fallback: scrollbar width causes problems
        max-width: calc(100vw - $workInfoWidth - 4 * var.$defaultGap);
        max-width: -webkit-fill-available;
        max-width: -moz-available;

        z-index: 2;
    }
}