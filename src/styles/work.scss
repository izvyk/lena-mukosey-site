@import 'base';
@import 'variables';
@import 'default-header';
@import 'default-footer-content';

$drawerHeight: 4em;
$minDesktopWidth: 700px;
$arrowDesktopWidth: 13px;

main {
    min-height: calc(100svh - $footerHeight - $headerHeight);
}

footer {
    display: none;
}

#text #footer-content {
    padding-inline: 0;
}

#imagesContainer {
    padding-inline: $textOffsetHorizontal;
    height: calc(100vh - $headerHeight - $drawerHeight);
    height: calc(100svh - $headerHeight - $drawerHeight);
    overflow-y: auto;
    display: grid;
    // align-content: start;
    flex-wrap: wrap;
    gap: $defaultGap;

    picture {
        display: block;
        max-width: 100%;
        max-height: calc(100vh - $headerHeight);
        max-height: calc(100svh - $headerHeight);
    }

    img {
        height: 100%;
        max-height: inherit;
        max-width: inherit;
        object-fit: contain;
    }
}

#drawer {
    position: relative;
    background-color: white;
    
    #firstline {
        display: flex;
        height: $drawerHeight;
        align-items: center;
        padding-inline: $textOffsetHorizontal;
        height: auto;
        
        #description {
            margin-inline: $defaultGap;
            height: min-content;
            flex: 1;
            
            #title {
                font-weight: bold;
            }

            #extra {
                font-size: 14px;
            }
        }
    }

    #text {
        padding-inline: $textOffsetHorizontal;
        overflow: auto;
        overflow-wrap: break-word;
        line-height: 150%;
        
        @media (max-width: $desktopSingleWorkBreakpoint) {
            max-height: 50vh;
            max-height: 50svh;
        }
    }
}

.arrow {
    display: inline-block;
    height: 100%;
    box-sizing: border-box;
    position: relative;

    a {
        position: static;

        span {
            position: absolute;
            top: 0;
            left: 0;
            width: calc(100% + $defaultGap + $textOffsetHorizontal);
            height: 100%;
            margin-left: -$defaultGap;
        }

        &[href=""] {
            pointer-events: none;
            & + svg polyline {
                stroke: #888;
            }
        }
    }

    svg {
        height: 100%;
        max-width: 100%;

        polyline {
            stroke-width: 3px;
        }
    }

    &.up {
        position: absolute;
        top: calc(-1 * $drawerHeight / 2);
        left: 0;
        height: auto;
        width: 100%;
        text-align: center;
        margin: 0;
        
        svg polyline {
            transform: rotate(-90deg);
            transform-origin: center;
        }
    }
}

@media (min-width: $desktopSingleWorkBreakpoint) {
    header {
        padding-inline: $textOffsetHorizontalMin;
    }

    footer {
        display: initial;
    }

    #footer-content {
        padding-inline: $textOffsetHorizontalMin;
    }

    main {
        display: grid;
        grid-template-columns: 0fr 1fr;
        gap: $defaultGap;
    }

    #imagesContainer {
        position: initial;
        height: auto;
        // justify-content: end;
        min-height: calc(100vh - 2 * $defaultGap);
        min-height: calc(100svh - 2 * $defaultGap);
        padding: 0 $defaultGap 0;
        overflow-y: initial;
        order: 2;
        margin-top: calc(-1 * $headerHeight + $defaultGap);
        z-index: 1;

        picture {
            max-height: calc(100vh - 2 * $defaultGap);
            max-height: calc(100svh - 2 * $defaultGap);
            // margin-left: auto;
        }
    }

    #drawer {
        position: sticky;
        top: $headerHeight;
        width: 30ch;
        margin-left: $textOffsetHorizontalMin;
        order: 1;
        height: fit-content;

        #footer-content {
            display: none;
        }

        #firstline {
            padding: 0;
            margin: 0;
            align-items: start;

            #description {
                margin-inline: calc($defaultGap / 2);
            }
        }


        #text {
            padding: 0;
            margin-top: $defaultGap;
        }
    }

    .arrow {
        margin: 0;
        width: initial;
        &.up {
            display: none;
        }

        a span {
            margin-left: -$textOffsetHorizontalMin;
            width: calc($textOffsetHorizontalMin + $arrowDesktopWidth + $defaultGap / 2);
        }
    }
}